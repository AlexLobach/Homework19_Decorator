def debug(func):  # Функция декоратор
    def wrapper(*args):  # Объявление функции обертки декорируемой функции
        work_func = func(*args)  # В переменную записывается вернувшийся результат работы декорируемой функции.
        print(f'Имя функции: {func.__name__}\nПередаваемые аргументы: {args}')  # Вывод на экран назавния декорируемой
        # функциии и ее аргументами
        print(f'Результат работы декарируемой функции: {work_func}')  # Вывод на экран результата работы функции.

    return wrapper  # Возвращает результат работы обертки.


@debug  # Вызов декоратора.
def retrieved_func(*args):  # Декорируемая функция. Функция передает в список элементы подсписка поочереди.
    list_ = [x for el in args for x in el]  # Генератор списка =)
    return list_  # Вернется результат работы функции


retrieved_func([1, 2, 3], [4, 5, 6], [7, 8, 9])  # Вызов декорируемой функции.
retrieved_func([1, 2], [3, 4, 5, 6])  # Еще один вызов декорируемой функции.
